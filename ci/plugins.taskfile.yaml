# https://taskfile.dev

#Called by the vnbuild system to produce builds for my website
#https://www.vaughnnugent.com/resources/software

version: "3"

includes:
  install:
    taskfile: install.taskfile.yaml

tasks:

  all:
    deps:
    - install-webserver
    - install-rpmalloc
    - install-compressor-lib
    - install-argon2-lib
    - install-compression
    - install-sqlite
    - install-router
    - install-accounts
    - install-sessions
    - install-vncache
    - install-vncache-sessions
    - install-users
    cmds:
   
    - echo "Installing and configuring plugins and UI"
    - task: build-proj

  build-proj:
    cmds:
    #build front-end
    - cmd: cd ../front-end && task build
    #move dist files to web root
    - cmd: powershell cp -Recurse -Force "../front-end/dist" "build/"

    #build the plugin 
    - cmd: cd ../back-end/src && task build
    - cmd: powershell mkdir -Force "build/plugins/{{ .PLUGIN_NAME }}"
    - cmd: powershell cp -Recurse -Force "../back-end/src/bin/release/net8.0/publish/*" "build/plugins/{{ .PLUGIN_NAME }}/"

  install-webserver:
    cmds:
    #clone the webserver (it's cross platform when using dotnet command so just grab the linux version)
    - task: install:install
      vars:
        PROJECT_NAME: 'VNLib.Webserver'
        MODULE_NAME: "VNLib.Core"
        FILE_NAME: "linux-x64-release.tgz"
        DIR: 'build/webserver'
        VERSION: '{{ .CORE_VERSION }}'
        HASH: 
    #remove the executable since its not needed
    - cmd: cd build/webserver/ && powershell rm VNlib.WebServer

  install-accounts:
    cmds:
    #install accounts plugin
    - task: install:install
      vars:
        PROJECT_NAME: 'VNLib.Plugins.Essentials.Accounts'
        MODULE_NAME: "Plugins.Essentials"
        FILE_NAME: "release.tgz"
        DIR: './build/plugins/Essentials.Accounts'
        VERSION: '{{ .ESSENTIALS_VERSION }}'
        HASH: 

  install-router:
    cmds:
    #install router plugin
    - task: install:install
      vars:
        PROJECT_NAME: 'VNLib.Plugins.Essentials.Content.Routing'
        MODULE_NAME: "Plugins.Essentials"
        FILE_NAME: "release.tgz"
        DIR: './build/plugins/PageRouter'
        VERSION: '{{ .ESSENTIALS_VERSION }}'
        HASH: 

  install-sessions:
    cmds:
    #install sessions plugin
    - task: install:install
      vars:
        PROJECT_NAME: 'SessionProvider'
        MODULE_NAME: "Plugins.Essentials"
        FILE_NAME: "release.tgz"
        DIR: './build/plugins/SessionProvider'
        VERSION: '{{ .ESSENTIALS_VERSION }}'
        HASH: 

  install-vncache-sessions:
    cmds:
    #install vncache-web-sessions plugin
    - task: install:install
      vars:
        PROJECT_NAME: 'VNLib.Plugins.Sessions.VNCache'
        MODULE_NAME: "Plugins.Essentials"
        FILE_NAME: "release.tgz"
        DIR: './build/plugins/assets/VNLib.Plugins.Sessions.VNCache'
        VERSION: '{{ .ESSENTIALS_VERSION }}'
        HASH: 

  install-users:
    cmds:
    #install users plugin
    - task: install:install
      vars:
        PROJECT_NAME: 'VNLib.Plugins.Essentials.Users'
        MODULE_NAME: "Plugins.Essentials"
        FILE_NAME: "release.tgz"
        DIR: './build/plugins/assets/VNLib.Plugins.Essentials.Users'
        VERSION: '{{ .ESSENTIALS_VERSION }}'
        HASH: 

  install-vncache:
    cmds:
    #install vncache global cache provider plugin
    - task: install:install
      vars:
        PROJECT_NAME: 'VNLib.Data.Caching.Providers.VNCache'
        MODULE_NAME: "VNLib.Data.Caching"
        FILE_NAME: "release.tgz"
        DIR: './build/plugins/assets/VNLib.Data.Caching.Providers.VNCache'
        VERSION: '{{ .CACHE_VERSION }}'
        HASH: 

  install-sqlite:
    cmds:
    #install SQLite asset package
    - task: install:install
      vars:
        PROJECT_NAME: 'VNLib.Plugins.Extensions.Loading.Sql.SQLite'
        MODULE_NAME: "VNLib.Plugins.Extensions"
        FILE_NAME: "release.tgz"
        DIR: './build/plugins/assets/VNLib.Plugins.Extensions.Loading.Sql.SQLite'
        VERSION: '{{ .EXTENSIONS_VERSION }}'
        HASH:

  install-compression:
    cmds:
    #install compression plugin
    - task: install:install
      vars:
        PROJECT_NAME: 'VNLib.Net.Compression'
        MODULE_NAME: "VNLib.Core"
        FILE_NAME: "release.tgz"
        DIR: './build/lib/vnlib.net.compression'
        VERSION: '{{ .CORE_VERSION }}'
        HASH: 

  install-compressor-lib:
    cmds:
     #install the compressor binary for Windows
    - task: install:install
      vars:
        PROJECT_NAME: 'vnlib_compress'
        MODULE_NAME: "VNLib.Core"
        FILE_NAME: "msvc-x64-release-vnlib_compress.tgz"
        DIR: './build/windows-x86_64/lib/vnlib_compress'
        VERSION: '{{ .CORE_VERSION }}'

    #install compressor plugin
    - task: install:install
      vars:
        PROJECT_NAME: 'vnlib_compress'
        MODULE_NAME: "VNLib.Core"
        FILE_NAME: "src.tgz"
        DIR: './build/lib/vnlib_compress'
        VERSION: '{{ .CORE_VERSION }}'

  install-argon2-lib:
    cmds:
    #install the argon2 binary for Windows
    - task: install:install
      vars:
        PROJECT_NAME: 'argon2'
        MODULE_NAME: "VNLib.Core"
        FILE_NAME: "msvc-x64-release-argon2.tgz"
        DIR: './build/windows-x86_64/lib/argon2'
        VERSION: '{{ .CORE_VERSION }}'

    #install the argon2 source code package for Linux and Mac
    - task: install:install
      vars:
        PROJECT_NAME: 'argon2'
        MODULE_NAME: "VNLib.Core"
        FILE_NAME: "src.tgz"
        DIR: './build/lib/argon2'
        VERSION: '{{ .CORE_VERSION }}'

  install-rpmalloc:
    cmds:
    #install the rpmalloc binary for Windows
    - task: install:install
      vars:
        PROJECT_NAME: 'vnlib_rpmalloc'
        MODULE_NAME: "VNLib.Core"
        FILE_NAME: "msvc-x64-release-vnlib_rpmalloc.tgz"
        DIR: './build/windows-x86_64/lib/vnlib_rpmalloc'
        VERSION: '{{ .CORE_VERSION }}'

    #install the rpmalloc source code package for Linux and Mac
    - task: install:install
      vars:
        PROJECT_NAME: 'vnlib_rpmalloc'
        MODULE_NAME: "VNLib.Core"
        FILE_NAME: "src.tgz"
        DIR: './build/lib/vnlib_rpmalloc'
        VERSION: '{{ .CORE_VERSION }}'
