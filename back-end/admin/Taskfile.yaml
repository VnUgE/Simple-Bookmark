
#taskfile for building the back-end server plugin

version: '3'

tasks:

  build:
    dir: '{{.USER_WORKING_DIR}}'
    vars:
      DOTNET_BUILD_FLAGS: 
        --nologo
        /p:RunAnalyzersDuringBuild=false
        /p:BuildInParallel=true
        /p:MultiProcessorCompilation=true
        /p:ErrorOnDuplicatePublishOutputFiles=false
    cmds:
    #build project
    - cmd: dotnet publish -c release {{ .DOTNET_BUILD_FLAGS }} 

  #postbuild to package artifaces into the archives for upload
  postbuild_success:
   dir: '{{.USER_WORKING_DIR}}'
   vars:
     #output directory for the build artifacts
     OUT_DIR: 'bin/release/{{ .TARGET_FRAMEWORK }}/publish'
   
   cmds:
    #pack up source code
    - task: packsource

    #copy license to output dir
    - cmd: powershell cp '{{ .MODULE_DIR }}/LICENSE' -Destination '{{ .OUT_DIR }}/LICENSE'

    #tar the plugin output and put it in the bin dir
    - cmd: cd {{ .OUT_DIR }} && tar -czf '{{ .USER_WORKING_DIR }}/bin/release.tgz' .

  packsource:
    dir: '{{.USER_WORKING_DIR}}'
    internal: true
    cmds:
    #copy source code to target
    - powershell -Command "Get-ChildItem -Include *.cs,*.csproj -Recurse | Where { \$_.FullName -notlike '*\obj\*' -and \$_.FullName -notlike '*\bin\*' } | Resolve-Path -Relative | tar --files-from - -czf 'bin/src.tgz'"
 
  #clean hook
  clean:
    dir: '{{.USER_WORKING_DIR}}'
    ignore_error: true
    cmds:
    - cmd: dotnet clean -c release
    - cmd: powershell rm -Recurse bin
    - cmd: powershell rm -Recurse obj